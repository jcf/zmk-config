/* -*- mode: dts -*- */
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#define LH(keycode) LC(LS(LA(LG(keycode))))
#define LM(keycode) LC(LS(LA(keycode)))

#define HYPER LC(LS(LG(LALT)))
#define MEH LC(LS(LALT))

#define ZERO 0
#define SYM 1
#define NUM 2
#define EVIL 3
#define NAV 4
#define MAGIC 5

/ {
    behaviors {
        magic: magic_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "MAGIC_HOLD_TAP";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&rgb_ug_status_macro>;
        };

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        td: tapdance {
            compatible = "zmk,behavior-hold-tap";
            label = "TAPDANCE";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    macros {
        rgb_ug_status_macro: rgb_ug_status_macro_0 {
            label = "RGB_UG_STATUS";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&rgb_ug RGB_STATUS>;
        };

        bt_0: bt_profile_macro_0 {
            label = "BT_0";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>
                , <&bt BT_SEL 0>;
        };

        bt_1: bt_profile_macro_1 {
            label = "BT_1";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>
                , <&bt BT_SEL 1>;
        };

        bt_2: bt_profile_macro_2 {
            label = "BT_2";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>
                , <&bt BT_SEL 2>;
        };

        bt_3: bt_profile_macro_3 {
            label = "BT_3";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>
                , <&bt BT_SEL 3>;
        };

        ZMK_MACRO(meta_x,
            wait-ms = <30>;
            tap-ms = <40>;
            bindings = <&macro_press &kp LALT>
                     , <&macro_tap &kp X>
                     , <&macro_release &kp LALT>;
        )

        // TODO Parameterise Evil leader macros.
        ZMK_MACRO(spc_bs,
            wait-ms = <30>;
            tap-ms = <40>;
            bindings = <&kp SPACE &kp B &kp S>;
        )

        ZMK_MACRO(confirm,
            wait-ms = <30>;
            tap-ms = <40>;
            bindings = <&macro_press &kp LCTRL>
                     , <&macro_tap &kp C &kp C>
                     , <&macro_release &kp LCTRL>;
        )

        ZMK_MACRO(cancel,
            wait-ms = <30>;
            tap-ms = <40>;
            bindings = <&macro_press &kp LCTRL>
                     , <&macro_tap &kp C &kp K>
                     , <&macro_release &kp LCTRL>;
        )
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
            &kp F1          &kp F2      &kp F3      &kp F4       &kp F5                                                                                                   &kp F6       &kp F7       &kp F8      &kp F9      &kp F10
            &kp BSLH        &kp N1      &kp N2      &kp N3       &kp N4       &kp N5                                                                            &kp N6    &kp N7       &kp N8       &kp N9      &kp N0      &kp EQUAL
            &kp GRAVE       &kp B       &kp Y       &hm MEH O    &hm HYPER U  &kp SQT                                                                           &kp SEMI  &hm HYPER L  &hm MEH D    &kp W       &kp V       &kp Z
            &caps_word      &hm LGUI C  &hm LALT I  &hm LSHFT E  &hm LCTRL A  &kp COMMA                                                                         &kp DOT   &hm RCTRL H  &hm RSHFT T  &hm LALT S  &hm RGUI N  &kp Q
            &none           &kp G       &kp X       &kp J        &kp K        &kp MINUS  &key_repeat     &kp LM(L)     &none  &none  &kp LM(M)     &kp ESC      &kp FSLH  &kp R        &kp M        &kp F       &kp P       &none
            &magic MAGIC 0  &kp HOME    &kp PG_UP   &kp PG_DN    &kp END                 &lt SYM SPACE   &lt NAV BKSP  &none  &none  &lt EVIL TAB  &lt NUM RET            &none        &kp LBKT     &kp RBKT    &none       &none
            >;
        };

        symbols_layer {
            bindings = <
            &trans  &trans  &trans    &trans     &trans                                                                               &trans    &trans    &trans    &trans     &trans
            &trans  &trans  &trans    &trans     &trans     &trans                                                        &trans      &trans    &trans    &trans    &trans     &trans
            &trans  &trans  &trans    &kp MEH    &kp HYPER  &trans                                                        &kp CARET   &kp LBKT  &kp RBKT  &kp HASH  &kp PRCNT  &trans
            &trans  &trans  &kp LALT  &kp LSHFT  &kp LCTRL  &trans                                                        &kp DOLLAR  &kp LPAR  &kp RPAR  &kp AMPS  &kp EXCL   &trans
            &trans  &trans  &trans    &trans     &kp LGUI   &trans  &trans  &trans  &trans  &trans  &trans     &trans     &kp PLUS    &kp LBRC  &kp RBRC  &kp AT    &kp PIPE   &trans
            &trans  &trans  &trans    &trans     &trans             &trans  &trans  &trans  &trans  &kp UNDER  &kp MINUS              &trans    &trans    &trans    &trans     &trans
            >;
        };

        numbers_layer {
            bindings = <
            &trans  &trans     &trans  &trans  &trans                                                                         &trans     &trans     &trans    &trans  &trans
            &trans  &trans     &trans  &trans  &trans  &trans                                                         &trans  &trans     &trans     &trans    &trans  &trans
            &trans  &kp LBKT   &kp N7  &kp N8  &kp N9  &kp RBKT                                                       &trans  &trans     &trans     &trans    &trans  &trans
            &trans  &kp SEMI   &kp N4  &kp N5  &kp N6  &kp EQUAL                                                      &trans  &kp RCTRL  &kp RSHFT  &kp LALT  &trans  &trans
            &trans  &kp GRAVE  &kp N1  &kp N2  &kp N3  &kp BSLH   &trans  &trans   &trans     &trans  &trans  &trans  &trans  &trans     &trans     &trans    &trans  &trans
            &trans  &trans     &trans  &trans  &trans             &kp N0  &kp DOT  &kp MINUS  &trans  &trans  &trans          &trans     &trans     &trans    &trans  &trans
            >;
        };

        evil_layer {
            bindings = <
            &trans  &trans  &trans  &trans     &trans                                                                         &trans     &trans     &trans    &trans  &trans
            &trans  &trans  &trans  &trans     &trans    &trans                                                       &trans  &trans     &trans     &trans    &trans  &trans
            &trans  &trans  &trans  &cancel    &confirm  &trans                                                       &trans  &trans     &trans     &trans    &trans  &trans
            &trans  &trans  &trans  &kp GRAVE  &kp SEMI  &trans                                                       &trans  &kp RCTRL  &kp RSHFT  &kp LALT  &trans  &trans
            &trans  &trans  &trans  &trans     &spc_bs   &trans   &trans     &trans   &trans  &trans  &trans  &trans  &trans  &trans     &trans     &trans    &trans  &trans
            &trans  &trans  &trans  &trans     &trans             &kp COLON  &meta_x  &trans  &trans  &trans  &trans          &trans     &trans     &trans    &trans  &trans
            >;
        };

        nav_layer {
            bindings = <
            &trans  &trans  &trans    &trans     &trans                                                                            &trans     &trans     &trans     &trans     &trans
            &trans  &trans  &trans    &trans     &trans     &trans                                                  &trans         &trans     &trans     &trans     &trans     &trans
            &trans  &trans  &trans    &kp MEH    &kp HYPER  &trans                                                  &kp LG(LS(Z))  &kp LG(V)  &kp LG(C)  &kp LG(X)  &kp LG(Z)  &trans
            &trans  &trans  &kp LALT  &kp LSHFT  &kp LCTRL  &trans                                                  &none          &kp LEFT   &kp DOWN   &kp UP     &kp RIGHT  &trans
            &trans  &trans  &trans    &trans     &kp LGUI   &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans         &kp HOME   &kp PG_DN  &kp PG_UP  &kp END    &trans
            &trans  &trans  &trans    &trans     &trans             &trans  &trans  &trans  &trans  &trans  &trans                 &trans     &trans     &trans     &trans     &trans
            >;
        };

        magic_layer {
            bindings = <
            &bt BT_CLR        &none               &none           &none           &none                                                                                                           &none      &none      &none      &none      &bt BT_CLR_ALL
            &none             &none               &none           &none           &none           &none                                                                                &none      &none      &none      &none      &none      &none
            &none             &rgb_ug RGB_SPI     &rgb_ug RGB_SAI &rgb_ug RGB_HUI &rgb_ug RGB_BRI &rgb_ug RGB_TOG                                                                      &none      &none      &none      &none      &none      &none
            &bootloader       &rgb_ug RGB_SPD     &rgb_ug RGB_SAD &rgb_ug RGB_HUD &rgb_ug RGB_BRD &rgb_ug RGB_EFF                                                                      &none      &none      &none      &none      &none      &bootloader
            &sys_reset        &none               &none           &none           &none           &none           &bt_2     &bt_3     &none            &none     &none     &none       &none      &none      &none      &none      &none      &sys_reset
            &none             &none               &none           &none           &none                           &bt_0     &bt_1     &out OUT_USB     &none     &none     &none                  &none      &none      &none      &none      &none
            >;
        };

        /* One transparent layer for your creative use.

        layer_N {
            bindings = <
            &trans  &trans  &trans  &trans  &trans                                                                  &trans  &trans  &trans  &trans  &trans
            &trans  &trans  &trans  &trans  &trans  &trans                                                  &trans  &trans  &trans  &trans  &trans  &trans
            &trans  &trans  &trans  &trans  &trans  &trans                                                  &trans  &trans  &trans  &trans  &trans  &trans
            &trans  &trans  &trans  &trans  &trans  &trans                                                  &trans  &trans  &trans  &trans  &trans  &trans
            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;
        };
        */
    };
};
